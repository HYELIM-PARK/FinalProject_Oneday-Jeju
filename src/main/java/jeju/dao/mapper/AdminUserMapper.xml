<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DOCTYPE -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="jeju.dao.face.AdminUserDao">
	
	<!-- JejuUser DTO -->
	<resultMap type="jeju.dto.JejuUser" id="JejuUser">
		<id column="user_no" property="userNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_pw" property="userPw"/>
		<result column="user_name" property="userName"/>
		<result column="user_nick" property="userNick"/>
		<result column="user_birth_date" property="userBirthDate"/>
		<result column="user_email" property="userEmail"/>
		<result column="user_phone" property="userPhone"/>
		<result column="user_zipcode" property="userZipcode"/>
		<result column="user_address" property="userAddress"/>
		<result column="user_address_detail" property="userAddressDetail"/>
		<result column="user_agree" property="userAgree"/>
		<result column="user_join_date" property="userJoinDate"/>
		<result column="user_mail_authkey" property="userMailAuthkey"/>
		<result column="user_mail_auth" property="userMailAuth"/>
		<result column="user_grade" property="userGrade"/>
	</resultMap>

	<!-- 목록 조회 컬럼 -->
	<sql id="selectUser">
		SELECT user_no, user_id, user_name, user_nick, user_email, user_join_date, user_mail_auth, user_grade FROM JejuUser 
	</sql>
	
	<!-- 검색 쿼리 -->
	<sql id="search">
		<choose>
			<!-- 검색 옵션을 선택한 경우 -->
			<when test='condition == "userId"'>
				WHERE user_id LIKE '%'||#{search}||'%'
			</when>
			<when test='condition == "userName"'>
				WHERE user_name LIKE '%'||#{search}||'%'
			</when>
			<when test='condition == "userNick"'>
				WHERE user_nick LIKE '%'||#{search}||'%'
			</when>
			<when test='condition == "userEmail"'>
				WHERE user_email LIKE '%'||#{search}||'%'
			</when>
			<!-- 검색 옵션을 선택 안 한 경우 -->
			<otherwise>
				WHERE user_id LIKE '%'||#{search}||'%'
				OR user_name LIKE '%'||#{search}||'%'
				OR user_nick LIKE '%'||#{search}||'%'
				OR user_email LIKE '%'||#{search}||'%'
			</otherwise>
		</choose>
	</sql>

	<!-- 총 사용자 수 조회 -->
	<select id="selectCountAll" resultType="int" parameterType="jeju.util.Paging">
		SELECT COUNT(*) FROM (
			<include refid="selectUser" />
			<include refid="search" />
		)
	</select>
	
	<!-- 목록 조회 rownum 적용 -->
	<select id="selectPageList" resultMap="JejuUser" parameterType="jeju.util.Paging">
		SELECT * FROM (
			SELECT rownum rnum, J.* FROM (
				<include refid="selectUser"/>
				<include refid="search"/>
				ORDER BY user_no ASC	
			) J
		) R
		WHERE rnum BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<!-- 정보 조회 -->
	<select id="selectInfo" resultMap="JejuUser" parameterType="jeju.dto.JejuUser" >
		SELECT user_no, user_id, user_name, user_nick, user_birth_date, user_email, user_phone, user_address, user_address_detail
		FROM JejuUser WHERE user_no = #{userNo}
	</select>
	
	<!-- 정보 수정 -->
	<update id="update" parameterType="jeju.dto.JejuUser">
		UPDATE JejuUser 
		SET user_id = #{userId}, user_pw = #{userPw}, user_name = #{userName}, user_nick = #{userNick}, user_birth_date = #{userBirthDate}
			,user_email = #{userEmail}, user_phone = #{userPhone}, user_address = #{userAddress}, user_address_detail = #{userAddressDetail}
		WHERE user_no = #{userNo} 
	</update>
	
	<!-- 계정 삭제 -->
	<delete id="delete" parameterType="jeju.dto.JejuUser">
		DELETE JejuUser WHERE user_no = #{userNo}
	</delete>
	
	<!-- 관리자계정 등록 -->
	<insert id="insert" parameterType="jeju.dto.JejuUser">
		INSERT INTO JejuUser(user_no, user_id, user_pw, user_name, user_nick, user_email, user_grade)
		VALUES (user_no_seq.nextval, #{userId}, #{userPw}, #{userName}, #{userNick}, #{userEmail}, '1')
	</insert>

</mapper>